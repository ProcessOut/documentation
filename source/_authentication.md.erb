# Authentication

## Load your ProcessOut keys

```shell
# cURL makes it easy to authenticate
curl <%= api_link('/') %> \
  --user "<project-id>:<project-key>"
```

```php
<?php
// Load dependencies
require 'vendor/autoload.php';

// Instantiate ProcessOut
$processout = new \ProcessOut\ProcessOut(
    '<project-id>',
    '<project-key>');
?>
```

```python
# Load dependencies
from processout.processout import ProcessOut

# Instantiate ProcessOut
processout = ProcessOut(
    '<project-id>',
    '<project-key>')
```

```javascript
// Load package
var ProcessOut = require('processout');

// Instantiate ProcessOut
var processout = new ProcessOut.ProcessOut(
    '<project-id>',
    '<project-key>');
```

```csharp
// Include the 'using' statement
using ProcessOut;

// Instantiating ProcessOut
var MyProcessOut = new ProcessOut.ProcessOut(
    "<project-id>",
    "<project-key>");
```

> Make sure to replace `<project-id>` and `<project-key>` with your details.

To use ProcessOut's API, you will need to authenticate yourself using your API keys.
Your API keys are composed of your `project-id` and `project-key`. To get
these keys, you will need to have created a new project on your dashboard,
and browse that project's settings.

This authentication should be done during every request you make, and using the
Authorization HTTP header:

`Authorization: <authorization-code>`

<aside class="notice">
&lt;authorization-code> must be a base64 encoded string containing:

"&lt;project-id>:&lt;project-key>"
</aside>

## Globally set your default ProcessOut keys

```shell
# cURL makes it easy to authenticate
curl <%= api_link('/') %> \
  --user "<project-id>:<project-key>"
```

```php
<?php
// Let's assume $processout has already been instantiated

\ProcessOut\ProcessOut::setDefault($processout);
?>
```

```python
# Let's assume processout has already been instantiated

ProcessOut.setDefault(processout)
```

```javascript
// Let's assume processout has already been instantiated

ProcessOut.ProcessOut.setDefault(processout);
```

```csharp
// Let's assume MyProcessOut has already been instantiated

ProcessOut.ProcessOut.Default = MyProcessOut;
```

ProcessOut libraries also allow you to globally set your default ProcessOut
config keys, so that you don't need to pass the ProcessOut instance to every
new object you wish to create.
