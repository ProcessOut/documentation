## Get started

### Installation

```javascript
npm install processout
```

```python
pip install processout
```

```php
composer require processout/processout-php
```

```go
go get gopkg.in/processout.v1

// The godoc can be found at https://godoc.org/gopkg.in/processout.v1
```

Installing and setting up the libraries/modules/packages in your project
is most of the time really easy, and only consists of running a couple of
commands and/or dropping in some files.

You may also want to simply run a `git clone` command or download an archive
containg the library, and manage the dependencies yourself.

### Versionning

The ProcessOut API is entirely `versionized` to ensure backward compatibility
when we release new features or push breaking changes. This is done thanks to the
`API-Version` header.

The API version is automatically set in the libraries so you don't need to worry about it.

### Authentication

```python
# Load dependencies
from processout.processout import ProcessOut

# Instantiate ProcessOut
processout = ProcessOut()
processout.projectId     = '<project-id>'
processout.projectSecret = '<project-key>'

# Set this project as the default one for the current request
ProcessOut.setDefault(processout)
```

```javascript
// Load package
var ProcessOut = require('processout');

// Instantiate ProcessOut
var processout = new ProcessOut.ProcessOut();
processout.setProjectId('<project-id>');
processout.setProjectSecret('<project-key>');

// Set this project as the default one for the current request
ProcessOut.ProcessOut.setDefault(processout);
```

```php
<?php
// Load dependencies
require 'vendor/autoload.php';

// Instantiate ProcessOut
$processout = new \ProcessOut\ProcessOut();
$processout->setProjectId('<project-id>');
$processout->setProjectSecret('<project-key>');

// Set this project as the default one for the current request
\ProcessOut\ProcessOut::setDefault($processout);
?>
```

```go
// Package import
import "gopkg.in/processout.v1"

// Instantiate ProcessOut (in a method)
p := processout.New("<project-id>", "<project-key>")

// Do things with our new p variable
```

> Make sure to replace `<project-id>` and `<project-key>` with your details.

To use ProcessOut's API, you will need to authenticate yourself using your API keys.
Your API keys are composed of your `project-id` and `project-secret`. To get
these keys, you will need to have created a new project on your dashboard.

Once the authentication is done, a `ProcessOut` object should be returned,
representing your ProcessOut project.

## Sandbox

```javascript
var projectId     = '<project-id>';
var projectSecret = '<project-key>';

// To enable the sandbox
if(sandbox) {
    projectId = 'sandbox-' + projectId
}

var processout = new ProcessOut.ProcessOut()
processout.setProjectId(projectId);
processout.setProjectSecret(projectSecret);
```

```python
projectId     = '<project-id>'
projectSecret = '<project-key>'

# To enable the sandbox
if sandbox:
    projectId = 'sandbox-' + projectId

processout = ProcessOut()
processout.projectId     = projectId
processout.projectSecret = projectSecret
```

```php
<?php
$projectId     = '<project-id>';
$projectSecret = '<project-key>';

// To enable the sandbox
if($sandbox)
    $projectId = 'sandbox-' . $projectId;

$processout = new \ProcessOut\ProcessOut($projectId, $projectSecret);
$processout->setProjectId($projectId);
$processout->setProjectSecret($projectSecret);
?>
```

```go
projectID := "<project-id>"
projectSecret := "<project-key>"

// Enable the sandbox
if sandbox {
	projectID = "sandbox-" + projectID
}

p := processout.New(projectID, projectSecret)
```

> When deploying to production, you should verify that your webhooks are
> not coming from the sandbox

```javascript
// Let's assume data is filled with the webhook json decoded data
// Verify that the webhook is NOT from the sandbox
if(data['sandbox'] && !sandbox) {
    console.log('Sandbox mode is not allowed.');
    return;
}
```

```python
# Let's assume data is filled with the webhook json decoded data
# Verify that the webhook is NOT from the sandbox
if data['sandbox'] and not sandbox:
    print ('Sandbox mode is not allowed.')
    return
```

```php
<?php
// Let's assume $data is filled with the webhook json decoded data
// Verify that the webhook is NOT from the sandbox
if($data['sandbox'] && !$sandbox)
{
    echo 'Sandbox mode is not allowed.';
    exit();
}
?>
```

When developing your application, you might need to troubleshoot
problems which may occur in your ProcessOut implementation.

The ProcessOut sandbox lets you send all kinds of
webhooks or events to your application. To enable the sandbox, prepend `sandbox-`
to your project id. The checkout page of invoices you create under the sandbox
will display a list of events that you can trigger. These events, when triggered,
will send a webhook to your application if a `notify_url` was set in your
[dashboard](https://dashboard.processout.com).
