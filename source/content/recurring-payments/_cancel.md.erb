## Cancel a subscription

Canceling a customer subscription is made very easy. By default, cancellations
are effective immediately.

### Retrieve the subscription

```javascript
// Find a subscription from its id
ProcessOut.Subscription.find('<subscription-id>').then(
    function(subscription) {
    // You may now access the fetched subscription

}, function(err) {
    // An error occured

});
```

```python
from processout.subscription import Subscription

# Find a subscription from its id
subscription = Subscription.find('<subscription-id>')
```

```php
<?php
// Find a subscription from its id
$subscription = \ProcessOut\Subscription::find('<subscription-id>');
```

```go
// Find a subscription from its ID
sub, err := p.Subscriptions.Find("<subscription-id>")

// Do things with sub!
```

> Replace `<subscription-id>` with the subscription ID.

Find a subscription by its `id`.

If a subscription corresponding to the `id` is found, a new subscription object
is returned.

### Cancel the subscription

```javascript
subscription.cancel('Reason goes here').then(function(success) {
    // Successfully ended

}, function(err) {
    // Could not cancel it

});
```

```python
success = subscription.cancel('Reason goes here')
```

```php
<?php
$success = $subscription->cancel('Reason goes here');
```

```go
err = p.subscription.Cancel(sub, "Reason goes here")
```

Once the subscription is retrieved, you can cancel it and provide a `reason`
for the cancellation.
