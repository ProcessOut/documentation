---
title: Docs |Â ProcessOut

language_tabs:
  - shell
  - php
  - python

toc_footers:
  - <a href='https://secure.processout.com/signup'>Sign Up on ProcessOut</a>

search: true
---

# Introduction

```
,--.   ,--.       ,--.
|  |   |  | ,---. |  | ,---. ,---. ,--,--,--. ,---.
|  |.'.|  || .-. :|  || .--'| .-. ||        || .-. :
|   ,'.   |\   --.|  |\ `--.' '-' '|  |  |  |\   --.
'--'   '--' `----'`--' `---' `---' `--`--`--' `----'
```

Welcome to the ProcessOut documentation. The code provided here will mostly be based
on libraries using our API endpoints, which can be found [here](http://docs.processout.apiary.io).

Language bindings and libraries examples can be found on the right side of this page.
You may switch between them thanks to the menu at the top of this right pane.

## Helper libraries

> Code samples of these libraries will be shown on this pane. Feel free to choose
> which language you wish to see by selecting it in the top bar of this pane.

ProcessOut provides a set of API bindings and libraries created to help
developers easily integrate our service into their applications. These libraries
can be found on the ProcessOut's GitHub page:

- PHP:
    - [processout-php](https://github.com/ProcessOut/ProcessOut-php)
- Python:
    - [processout-python](https://github.com/ProcessOut/ProcessOut-python)
- Javascript:
    - [processout-javascript-modal](https://github.com/ProcessOut/ProcessOut-javascript-modal)

## Making requests

ProcessOut's current API (v1) is entirely *RESTful*. This means that you may perform
`GET`, `POST`, `PUT` and `DELETE` requests and expect the adequate response when available.

Furthermore, `POST`, `PUT` and `DELETE` can contain a json body if they have the
`Content-Type: application/json` header.

## Responses

> Response of a successful request *(200)*

```json
{
  "success": true,
  "message": null
}
```

> Response of a failed request *(4xx)*

```json
{
  "success": false,
  "message": "<Error message>"
}
```

Responses are always **JSON encoded**.

Responses should always contain at least the following keys:

- `success`: A boolean indicating if the request was successful
- `message`: A string giving more information about the error. Null if successful.

**HTTP codes** will also be used, so you should check the response code to get
a quick idea of the request's problem.

- `200`: *OK*. All good.
- `400`: *Bad request*. Your request body is most likely invalid or does not contain
the required values. Check the response message for more information.
- `401`: *Unauthorized*. Your API keys are most likely invalid, or not sent correctly.
- `402`: *Payment required*. You should check the project linked to these API keys.
- `404`: *Not found*. The item you are trying to fetch does not exist.

# Authentication

```shell
# cURL makes it easy to authenticate
curl <%= api_link('/') %> \
  --user "<project-id>:<project-secret>"
```

```php
<?php
// Load dependencies
require 'vendor/autoload.php';

// Instanciate ProcessOut
$processout = new \ProcessOut\ProcessOut(
    '<project-id>',
    '<project-secret>');
?>
```

```python
# Load dependencies
from processout.processout import ProcessOut

# Instanciate ProcessOut
processout = ProcessOut(
    '<project-id>',
    '<project-secret>')
```

> Make sure to replace `<project-id>` and `<project-secret>` with your details.

To use ProcessOut's API, you will need to authenticate using your API keys.
Your API keys are composed of your `project-id` and `project-secret`. To get
these keys, you will need to have created a new project on your dashboard,
and browse its project's settings.

This authentication should be done during every request you make, and using the
Authorization HTTP header:

`Authorization: <authorization-code>`

<aside class="notice">
&lt;authorization-code> must be a base64 encoded string containing:

"&lt;project-id>:&lt;project-secret>"
</aside>

# Invoices

Invoices are a quick way of generating a way for your customers to checkout.

Once an invoice is created, you will receive its checkout URL `url` as well as its unique `id`. Simply redirect your customer to the `url` to perform the transaction, or create a new modal -- thanks to our javascript library -- with the `id`.

## Create a new invoice

```shell
curl --user "<project-id>:<project-secret>" \
     --request POST \
     --header "Content-Type: application/json" \
     --data-binary "{
        \"item_name\": \"Awesome item\",
        \"item_price\": 4.99,
        \"item_quantity\": 1,
        \"currency\": \"USD\",
        \"taxes\": 0.49,
        \"shipping\": 2.00,
        \"discount\": 50,
        \"enable_coupon\": 1,
        \"return_url\": \"https://company.tld/success\",
        \"cancel_url\": \"https://company.tld/cancel\",
        \"notify_url\": \"https://company.tld/ipn\",
        \"custom\": \"42\",
        \"recurring_days\": 7,
        \"sandbox\": 1
    }" \
    <%= api_link '/invoices' %>
```

```php
<?php
// Load dependencies
require 'vendor/autoload.php';

// Instanciate ProcessOut
$processout = new \ProcessOut\ProcessOut(
    '<project-id>',
    '<project-secret>');

// Create a new invoice
$invoice = new \ProcessOut\Invoice\Invoice(
    $processout,                                  // ProcessOut instance
    '1 copy of a wonderful product at $4.99 USD', // Title
    4.99,                                         // Price
    1,                                            // Quantity
    'USD');                                       // Currency
?>
```

```python
# Load dependencies
from processout.processout      import ProcessOut
from processout.invoice.invoice import Invoice

# Instanciate ProcessOut
processout = ProcessOut(
    '<project-id>',
    '<project-secret>')

# Create a new invoice
invoice = Invoice(
    processout,                                   # ProcessOut instance
    '1 copy of a wonderful product at $4.99 USD', # Title
    4.99,                                         # Price
    1,                                            # Quantity
    'USD')                                        # Currency
```

Create an invoice.

Adding the `recurring_days` field makes you able to automatically charge a user `x` days. Every payment iteration will automatically be managed by ProcessOut.

### HTTP request

`POST <%= api_link('/invoices') %>`

## Create from a tailored invoice

```shell
curl --user "<project-id>:<project-secret>" \
     --request POST \
     --header "Content-Type: application/json" \
     --data-binary "{
        \"enable_coupon\": 1,
        \"return_url\": \"https://company.tld/success\",
        \"cancel_url\": \"https://company.tld/cancel\",
        \"notify_url\": \"https://company.tld/ipn\",
        \"custom\": \"my_customer_id=1\",
        \"sandbox\": 1
    }" \
    <%= api_link '/invoices/from-tailored/<tailored-invoice-id>' %>
```

```php
<?php
// Load dependencies
require 'vendor/autoload.php';

// Instanciate ProcessOut
$processout = new \ProcessOut\ProcessOut(
    '<project-id>',
    '<project-secret>');

// Create a new invoice from a tailored invoice
$invoice = new \ProcessOut\Invoice\TailoredInvoice(
    $processout,
    '<tailored-invoice-id>');
?>
```

```python
# Load dependencies
from processout.processout              import ProcessOut
from processout.invoice.tailoredinvoice import TailoredInvoice

# Instanciate ProcessOut
processout = ProcessOut(
    '<project-id>',
    '<project-secret>')

# Create a new invoice from a tailored invoice
invoice = TailoredInvoice(
    processout,
    '<tailored-invoice-id>')
```

> Make sure to replace `<tailored-invoice-id>` with your tailored invoice id

`Tailored invoices` are invoices which can be stored in ProcessOut and used
as a template for new invoices, with some fields already set.

It is possible to create invoices from these tailored invoices using our API.

### HTTP request

`POST <%= api_link('/invoices/form-tailored/<tailored-invoice-id>') %>`

### URL Parameters

Parameter | Description
--------- | -----------
tailored-invoice-id | The ID of the tailored invoice

## Get invoice attributes

```shell
# There is no shell library
```

```php
<?php
// Let's say $invoice has previously been created

echo $invoice->getItemName();
echo $invoice->getItemPrice();
echo $invoice->getItemQuantity();
echo $invoice->getCurrency();
echo $invoice->getTaxes();
echo $invoice->getShipping();
echo $invoice->getDiscount(); # percentage
echo $invoice->getEnableCoupon();
echo $invoice->getReturnUrl();
echo $invoice->getCancelUrl();
echo $invoice->getNotifyUrl();
echo $invoice->getCustom();
echo $invoice->getSandbox();
?>
```

```python
# Let's say invoice has previously been created

print (invoice.itemName)
print (invoice.itemPrice)
print (invoice.itemQuantity)
print (invoice.currency)
print (invoice.taxes)
print (invoice.shipping)
print (invoice.discount) # percentage
print (invoice.enableCoupon)
print (invoice.returnUrl)
print (invoice.cancelUrl)
print (invoice.notifyUrl)
print (invoice.custom)
print (invoice.sandbox)
```

Once an invoice instance has been created, you might need to access its
attributes.

## Set invoice attributes

Once an invoice instance has been created, you might need to set or update its
attributes.

```shell
# There is no shell library
```

```php
<?php
// Let's say $invoice has previously been created

$invoice->setItemName('new name');
$invoice->setItemPrice(4.20);
$invoice->setItemQuantity(4);
$invoice->setCurrency('EUR');
$invoice->setTaxes(4.20);
$invoice->setShipping(4.20);
$invoice->setDiscount(42); // percentage
$invoice->setEnableCoupon(false);
$invoice->setReturnUrl('http(s)://your.site/return');
$invoice->setCancelUrl('http(s)://your.site/cancel');
$invoice->setNotifyUrl('http(s)://your.site/notify');
$invoice->setCustom('my_customer_id=1');
$invoice->setSandbox(true);
?>
```

```python
# Let's say invoice has previously been created

invoice.itemName('new name')
invoice.itemPrice(4.20)
invoice.itemQuantity(4)
invoice.currency('EUR')
invoice.taxes(4.20)
invoice.shipping(4.20)
invoice.discount(42) # percentage
invoice.enableCoupon(false)
invoice.returnUrl('http(s)://your.site/return')
invoice.cancelUrl('http(s)://your.site/cancel')
invoice.notifyUrl('http(s)://your.site/notify')
invoice.custom('my_customer_id=1')
invoice.sandbox(true)
```

## Redirect customer to checkout

Once an invoice is created, it is possible to redirect the customer to the
checkout page.