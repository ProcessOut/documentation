---
title: Capture a payment
---

## Capturing a payment and getting paid

Previous to capturing a payment, you must first have generated or stored a token
using [`ProcessOut.js` &nearr;](#) and send it back to the server. This guide
aims at making use of this token to capture a payment.

<hr>

#### Generating an invoice

Prior to getting paid, you first need to create an [`Invoice` &nearr;](#) resource
meant to define how much your customer will get charged, and set metadata
related to the payment.

<div class="language-selector-wrapper">
<%= partial "lg-selector" %>
```sh
curl https://api.processout.com/invoices \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd \
    -d name="Awesome invoice" \
    -d amount=9.99 \
    -d currency=USD 
```

```javascript
<%= partial "header-js" %>
var invoice = new ProcessOut.Invoice();
invoice.setName('Amazing item');
invoice.setAmount('4.99');
invoice.setCurrency('USD');

invoice.create().then(function(invoice) {
    // invoice is our newly created resource

}, function(err) {
    // An error occured

});
```

```python
<%= partial "header-python" %>
invoice          = processout.Invoice()
invoice.name     = 'Amazing item'
invoice.amount   = '4.99'
invoice.currency = 'USD'

invoice = invoice.create()
```

```php
<%= partial "header-php" %>
$invoice = new \ProcessOut\Invoice();
$invoice
    ->setName('Amazing item')
    ->setAmount('4.99')
    ->setCurrency('USD');

$invoice = $invoice->create();
```

```go
<%= partial "header-go" %>
iv, err := p.Invoices.Create(&processout.Invoice{
    Name:     "Amazing item",
    Amount:   "4.99",
    Currency: "USD",
})
```
</div>


#### Capturing the invoice

Now that we have an invoice, we can capture it using the token previously
generated by [`ProcessOut.js` &nearr;](#).

<div class="language-selector-wrapper">
<%= partial "lg-selector" %>
```sh
curl https://api.processout.com/invoices/iv_lEZFFcQg5WwpKcolBrlzioeeFnnuPmyE/capture \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd \
    -d source=card_Tpu6ZOCDu1tnDKp0kTnPOcVDMUbW7dTU
```

```javascript
<%= partial "header-js" %>
invoice.capture("card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ").then(
    function(transaction) {
        // 

    }, function(err) {
        // The invoice could not be captured
    });
```

```python
<%= partial "header-python" %>
transaction = invoice.capture("card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ")
```

```php
<%= partial "header-php" %>
$transaction = $invoice->capture("card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ");
```

```go
<%= partial "header-go" %>
tr, _ := processout.Invoices.Capture(iv, "card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ")
```
</div>

If the capture was successful, a transaction is returned. You may then check that
its `status` attribute is set to `completed` in order to confirm the payment.
Learn more about the transaction's statuses [here](#).


#### Authorizing to only capture later

It is also possible to only authorize a payment and capture it later (7 days
max). This is done using the authorization & capture flow. Let's first
authorize the payment:

<div class="language-selector-wrapper">
<%= partial "lg-selector" %>
```sh
curl https://api.processout.com/invoices/iv_lEZFFcQg5WwpKcolBrlzioeeFnnuPmyE/authorize \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd \
    -d source=card_Tpu6ZOCDu1tnDKp0kTnPOcVDMUbW7dTU
```

```javascript
<%= partial "header-js" %>
invoice.authorize("card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ").then(
    function(transaction) {
        //

    }, function(err) {
        // The invoice could not be authorized
    });
```

```python
<%= partial "header-python" %>
transaction = invoice.authorize("card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ")
```

```php
<%= partial "header-php" %>
$transaction = $invoice->authorize("card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ");
```

```go
<%= partial "header-go" %>
tr, _ := processout.Invoices.Authorize(iv, "card_1jSEVrx7oaRta1KEdxoMWbiGkK2MijrZ")
```
</div>

If the authorization was successful, a transaction is returned. You may also
check its `status` field is set to `authorized` to confirm the authorization.
Now that the payment was authorized, you can save the ID of the `Invoice` you
generated earlier, and capture it a later time (the token isn't needed when
an authorization has already been done):

<div class="language-selector-wrapper">
<%= partial "lg-selector" %>
```sh
curl https://api.processout.com/invoices/iv_lEZFFcQg5WwpKcolBrlzioeeFnnuPmyE/capture
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd \
```

```javascript
<%= partial "header-js" %>
invoice.capture("").then(
    function(transaction) {
        // 

    }, function(err) {
        // The invoice could not be captured
    });
```

```python
<%= partial "header-python" %>
transaction = invoice.capture("")
```

```php
<%= partial "header-php" %>
$transaction = $invoice->capture("");
```

```go
<%= partial "header-go" %>
tr, _ := processout.Invoices.Capture(iv, "")
```
</div>

If the capture was successful, the same transaction as the one returned when doing
the authorization should be returned. You may check that its `status` attribute
is now set to `completed` to confirm the payment.