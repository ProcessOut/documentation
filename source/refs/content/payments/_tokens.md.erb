## Tokens

Tokens are objects referencing to a customer payment method, and can be used
to capture payments for your customers programmatically.

Tokens can reference objects such as `cards`, but also tokens native to the
alternative payment gateways you use. It is therefore possible to create tokens
for [PayPal](https://paypal.com) for instance.

When activating a subscription, tokens are also automatically created and linked
to the subscription so that ProcessOut uses it under the hood to automatically
capture payments as the subscription iterates. Such tokens will be marked with
a `is_subscription_only` set to `true`, and can only be used on the subscription 
they were created for.

##### Attributes
|||
--:|:--
<span class="console-font">**id**</span><br />*string*<br />Read-only |
<span class="console-font">**customer**</span><br />*customer_id*<br />*[Customer](#customers) expandable* | Customer for which the token was created
<span class="console-font">**card**</span><br />*card_id*<br />*[Card](#cards) expandable* | Card used to create the token
<span class="console-font">**type**</span><br />*string*<br />Read-only | Source used to create the token. Most of the time will be a `card`
<span class="console-font">**is_subscription_only**</span><br />*boolean*<br />Read-only | Whether or not the token was created for a specific subscription
<span class="console-font">**metadata**</span><br />[Metadata](#metadata)<br />*dictionary* | Context related to the customer, key-value pair (string - string)
<span class="console-font">**sandbox**</span><br />*boolean*<br />Read-only |

### Create a token

```shell
curl https://api.processout.com/customers/cust_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj/tokens \
    <%= partial "header-curl" %> \
    -d source=card_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj
```

```javascript
<%= partial "header-js" %>
client.newToken().create({
    customer_id: "cust_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj", 
    source:      "card_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj"
}).then(function(token) {
    // 

}, function(err) {
    // An error occured

});
```

```python
<%= partial "header-python" %>
token = client.new_token().create({
    "customer_id": "cust_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj",
    "source":      "card_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj"
})
```

```ruby
<%= partial "header-ruby" %>
token = client.token.create(
    customer_id: "cust_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj",
    source:      "card_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj"
)
```

```php
<%= partial "header-php" %>
$token = $client->newToken()->create(array(
    "customer_id" => "cust_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj",
    "source"      => "card_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj"
));
```

```go
<%= partial "header-go" %>
iv, err := client.NewToken().Create(&processout.TokenCreateParameter{
    Token: &processout.Token{
        CustomerID: "cust_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj",
    },
    Source: "card_C4hZXQTU0aWoYeenHYC0DektYDqf8ocj",
})
```

Creating a customer token can be done by providing a customer ID for which to
create the token, and a source. The source can be a `card`, but also a 
[gateway request](#).

The ID of the token that was created should be stored in your application
so you can [capture payments](#capture-an-invoice) using it later.

### List a customer's tokens

```shell
curl https://api.processout.com/customers/cust_WtaVdUjAGpOlbLiYWYXBR67whr91Rlks/tokens \
    <%= partial "header-curl" %>
```

```javascript
<%= partial "header-js" %>
customer.fetchTokens().then(
    function(tokens) {
        // And let's say our customer wants to remove its first token
        tokens[0].delete(); 

    }, function(err) {
        // The customer's tokens could not be fetched
    });
```

```python
<%= partial "header-python" %>
tokens = customer.fetch_tokens()
```

```ruby
<%= partial "header-ruby" %>
tokens = customer.fetch_tokens()
```

```php
<%= partial "header-php" %>
$tokens = $customer->fetchTokens();
```

```go
<%= partial "header-go" %>
tok, _ := cust.FetchTokens()
```

Once some tokens have been created for a customer, it is possible to list them
all.

### Delete a token

```shell
curl -X DELETE https://api.processout.com/customers/cust_WtaVdUjAGpOlbLiYWYXBR67whr91Rlks/tokens/tok_aKrYfz903uXn9MV0p8ZH7Lfly2JGtZWh \
    <%= partial "header-curl" %>
```

```javascript
token.delete().then(
    function(ok) {
        // 

    }, function(err) {
        // The token could not be deleted
    });
```

```python
<%= partial "header-python" %>
token.delete()
```

```ruby
<%= partial "header-ruby" %>
token.delete
```

```php
<%= partial "header-php" %>
$token->delete();
```

```go
<%= partial "header-go" %>
tok.Delete()
```

Deleting a token is irreversible and cannot be undone. An error is thrown
if the token could not be deleted.