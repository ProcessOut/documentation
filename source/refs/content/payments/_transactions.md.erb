## Transactions

Transactions are *read-only* objects linked to their corresponding [invoice](#invoices),
representing the actual payment that occured on an invoice.

ProcessOut will automatically generate and/or update Transaction resources
depending on the status of the payment.

Any metadata specified on an invoice will also be available in the metadata of
its transaction for easy reference.

##### Attributes
|||
--:|:--
<span class="console-font">**id**</span><br />*string*<br />Read-only |
<span class="console-font">**customer**</span><br />*[Customer](#customers)*<br />Read-only, expandable |
<span class="console-font">**invoice**</span><br />*[Invoice](#invoices)*<br />Read-only, expandable |
<span class="console-font">**subscription**</span><br />*[Subscription](#subscriptions)*<br />Read-only, expandable | 
<span class="console-font">**name**</span><br />*string*<br />Read-only | Name of the Transaction
<span class="console-font">**authorized_amount**</span><br />*string*<br />Read-only | Amount that was authorized for the transaction
<span class="console-font">**captured_amount**</span><br />*string*<br />Read-only | Amount that was captured for the transaction
<span class="console-font">**currency**</span><br />*string*<br />Read-only | Currency of the transaction
<span class="console-font">**authorized**</span><br />*boolean*<br />Read-only | Whether or not the transaction was authorized
<span class="console-font">**captured**</span><br />*boolean*<br />Read-only | Whether or not the transaction was captured
<span class="console-font">**status**</span><br />*string*<br />Read-only | [Status](#statuses) of the transaction
<span class="console-font">**processout_fee**</span><br />*string*<br />Read-only | Fee taken by ProcessOut to handle the transaction
<span class="console-font">**metadata**</span><br />[Metadata](#metadata)<br />*dictionary* | Context related to the transaction's invoice, key-value pair (string - string)

As seen in the transaction's attributes, it also contains a `status`, representing
the current status of the transaction. This status is automatically updated
by ProcessOut when an update occurs on the transaction.

You may find the full list of transaction statuses [here &nearr;](/payments/handle-status-changes-webhooks.html).

### Fetch a transaction

```shell
curl https://api.processout.com/transactions/tr_ItJdKlhfaVn0SUGd9z1i9Jqe0STl4jxC \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd
```

```javascript
<%= partial "header-js" %>
client.newTransaction().find("tr_ItJdKlhfaVn0SUGd9z1i9Jqe0STl4jxC").then(
    function(transaction) {
        // Transaction was fetched
    }, function(err) {
        // An error occured
    });
```

```python
<%= partial "header-python" %>
transaction = client.new_transaction().find("tr_ItJdKlhfaVn0SUGd9z1i9Jqe0STl4jxC")
```

```ruby
<%= partial "header-ruby" %>
transaction = client.transaction.find("tr_ItJdKlhfaVn0SUGd9z1i9Jqe0STl4jxC")
```

```php
<%= partial "header-php" %>
$transaction = $client->newTransaction()->find("tr_ItJdKlhfaVn0SUGd9z1i9Jqe0STl4jxC");
```

```go
<%= partial "header-go" %>
tr, err := client.NewTransaction().Find("tr_ItJdKlhfaVn0SUGd9z1i9Jqe0STl4jxC")
```

It is possible to fetch a transaction by its ID. An error is thrown if the 
transaction could not be found.
