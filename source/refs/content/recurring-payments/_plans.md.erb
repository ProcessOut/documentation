## Plans

Plans can be seen as templates for your [subscriptions](#subscriptions).

##### Attributes
|||
--:|:--
**id**<br />*string*<br />Read-only |
**name**<br />*string*<br />Required | Name of the plan
**amount**<br />*string*<br />Required | Amount to be paid at every iteration of the subscription
**currency**<br />*string*<br />Required | Currency of the subscription, in the ISO 4217 format (ex: `USD`)
**interval**<br />*string*<br />Required | Interval between each subscription iteration. "1m" for monthly subscriptions, "1w" for weekly.
**trial_period**<br />*string* | Trial period. "1w" for one week, "3m" for three months.
**metadata**<br />[Metadata](#metadata)<br />*dictionary* | Context related to the recurring invoice, key-value pair (string => string)
**sandbox**<br />*boolean*<br />Read-only |


### Create a plan

```sh
curl https://api.processout.com/plans \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd \
    -d id="silver-plan" \
    -d name="Amazing item" \
    -d amount="4.99" \
    -d currency=USD \
    -d interval=1m
```

```javascript
<%= partial "header-js" %>
var plan = new ProcessOut.Plan();
plan.setId("silver-plan");
plan.setName("Amazing item");
plan.setAmount("4.99");
plan.setCurrency("USD");
plan.setInterval("1m");

plan.create().then(
    function(plan) {
        // 

    }, function(err) {
        // An error occured

    });
```

```python
<%= partial "header-python" %>
plan          = Plan()
plan.id       = "silver-plan"
plan.name     = "Amazing item"
plan.amount   = "4.99"
plan.currency = "USD"
plan.interval = "1m"

plan = plan.create()
```

```php
<?php
<%= partial "header-php" %>
$plan = new \ProcessOut\Plan();
$plan
    ->setName("Amazing item")
    ->setAmount("4.99")
    ->setCurrency("USD")
    ->setInterval("1m");

$plan = $plan->create();
```

```go
<%= partial "header-go" %>
plan := &processout.Plan{
    ID:       "silver-plan",
	Name:     "Amazing item",
	Amount:   "4.99",
	Currency: "USD",
	Interval: "1m",
}

_, err := client.Plans.Create(plan)
```

Create a plan with the given attributes.

### Fetch a plan

```sh
curl https://api.processout.com/plans/silver-plan \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd
```

```javascript
<%= partial "header-js" %>
ProcessOut.Plan.find("silver-plan").then(
    function(plan) {
        // 

    }, function(err) {
        // An error occured

    });
```

```python
<%= partial "header-python" %>
plan = processout.Plan.find("silver-plan")
```

```php
<%= partial "header-php" %>
$plan = \ProcessOut\Plan::find("silver-plan");
```

```go
<%= partial "header-go" %>
plan, err := client.Plans.Find("silver-plan")
```

Fetch a plan from its ID. Throws an error if the subscription could
not be found.

### Delete a subscription

```sh
curl -X DELETE https://api.processout.com/plans/silver-plan \
    -u proj_OvJdvN73Ds1pecfQez2J13pK1YlRqFh4:key-qiOniTQlt8OazoMrnYJKaSnBhRpWN5Rd
```

```javascript
<%= partial "header-js" %>
ProcessOut.Plan.find("silver-plan").then(
    function(plan) {
        plan.delete().then(function(success) {
            // 

        }, function(err) {
            // Could not delete it

        });

    }, function(err) {
        // An error occured

    });
```

```python
<%= partial "header-python" %>
plan = processout.Plan.find("silver-plan")
plan.delete()
```

```php
<%= partial "header-php" %>
$plan = \ProcessOut\Plan::find("silver-plan");
$plan->delete();
```

```go
<%= partial "header-go" %>
plan, err := client.Plans.Find("silver-plan")
plan, err = client.Subscriptions.Delete(plan)
```

Deletes a plan. An error is thrown if the plan could not be deleted.
