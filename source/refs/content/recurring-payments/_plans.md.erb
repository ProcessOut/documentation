## Plans

Plans can be seen as templates for your [subscriptions](#subscriptions).

##### Attributes
|||
--:|:--
<span class="console-font">**id**</span><br />*string*<br /><span class="highlighted">Required</span> | ID of the plan. Must be unique to the project
<span class="console-font">**name**</span><br />*string*<br /><span class="highlighted">Required</span> | Name of the plan
<span class="console-font">**amount**</span><br />*string*<br /><span class="highlighted">Required</span> | Amount to be paid at every iteration of the subscription
<span class="console-font">**currency**</span><br />*string*<br /><span class="highlighted">Required</span> | Currency of the subscription, in the ISO 4217 format (ex: `USD`)
<span class="console-font">**interval**</span><br />*string*<br /><span class="highlighted">Required</span> | Interval between each subscription iteration. "1m" for monthly subscriptions, "1w" for weekly.
<span class="console-font">**trial_period**</span><br />*string* | Trial period. "1w" for one week, "3m" for three months.
<span class="console-font">**metadata**</span><br />[Metadata](#metadata)<br />*dictionary* | Context related to the recurring invoice, key-value pair (string - string)
<span class="console-font">**sandbox**</span><br />*boolean*<br />Read-only |


### Create a plan

```shell
curl https://api.processout.com/plans \
    <%= partial "header-curl" %> \
    -d id="silver-plan" \
    -d name="Amazing item" \
    -d amount="4.99" \
    -d currency=USD \
    -d interval=1m
```

```javascript
<%= partial "header-js" %>
client.new_plan({
    id:       "silver-plan",
    name:     "Amazing item",
    amount:   "4.99",
    currency: "USD",
    interval: "1m"
}).create().then(
    function(plan) {
        // 

    }, function(err) {
        // An error occured

    });
```

```python
<%= partial "header-python" %>
plan = client.new_plan({
    "id":       "silver-plan",
    "name":     "Amazing item",
    "amount":   "4.99",
    "currency": "USD",
    "interval": "1m"
}).create()
```

```ruby
<%= partial "header-ruby" %>
plan = client.plan.new(
    id:       "silver-plan",
    name:     "Amazing item",
    amount:   "4.99",
    currency: "USD",
    interval: "1m"
).create
```

```php
<?php
<%= partial "header-php" %>
$plan = $client->newPlan(array(
    "id"       => "silver-plan",
    "name"     => "Amazing item",
    "amount"   => "4.99",
    "currency" => "USD",
    "interval" => "1m"
))->create();
```

```go
<%= partial "header-go" %>
plan, err := client.NewPlan(&processout.Plan{
    ID:       "silver-plan",
	Name:     "Amazing item",
	Amount:   "4.99",
	Currency: "USD",
	Interval: "1m",
}).Create(p)
```

Create a plan with the given attributes.

### Fetch a plan

```shell
curl https://api.processout.com/plans/silver-plan \
    <%= partial "header-curl" %>
```

```javascript
<%= partial "header-js" %>
client.newPlan().find("silver-plan").then(
    function(plan) {
        // 

    }, function(err) {
        // An error occured

    });
```

```python
<%= partial "header-python" %>
plan = client.new_plan().find("silver-plan")
```

```ruby
<%= partial "header-ruby" %>
plan = client.plan.find("silver-plan")
```

```php
<%= partial "header-php" %>
$plan = $client->newPlan()->find("silver-plan");
```

```go
<%= partial "header-go" %>
plan, err := client.NewPlan().Find("silver-plan")
```

Fetch a plan from its ID. Throws an error if the plan could
not be found.

### Delete a plan

```shell
curl -X DELETE https://api.processout.com/plans/silver-plan \
    <%= partial "header-curl" %>
```

```javascript
<%= partial "header-js" %>
client.newPlan({
    id: "silver-plan"
}).delete().then(function(success) {
        // 

    }, function(err) {
        // Could not delete it

    });
```

```python
<%= partial "header-python" %>
client.new_plan({
    "id": "silver-plan"
}).delete()
```

```ruby
<%= partial "header-ruby" %>
client.plan{
    id: "silver-plan"
).delete
```

```php
<%= partial "header-php" %>
$client->newPlan(array(
    "id": "silver-plan"
))->delete();
```

```go
<%= partial "header-go" %>
err := client.NewPlan(&processout.Plan{
    ID: "silver-plan",
}).Delete()
```

Deletes a plan. An error is thrown if the plan could not be deleted.
